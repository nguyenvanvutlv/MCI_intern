# Generated by Django 4.1 on 2023-12-18 17:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_management', models.BooleanField(default=False)),
                ('username_management', models.CharField(blank=True, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username_management')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id_role', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID Role')),
                ('name_role', models.CharField(max_length=50, verbose_name='Name Role')),
                ('description_role', models.TextField(blank=True, null=True)),
                ('is_activate', models.BooleanField(default=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_user_role', to=settings.AUTH_USER_MODEL, verbose_name='ID User')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id_project', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID Project')),
                ('name_project', models.CharField(max_length=50, verbose_name='Name Project')),
                ('description_project', models.TextField(blank=True, null=True)),
                ('start_date_project', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date Project')),
                ('end_date_project', models.DateField(default=django.utils.timezone.now, verbose_name='End Date Project')),
                ('status_project', models.CharField(choices=[('1', 'In Progress'), ('2', 'Completed'), ('3', 'Pending'), ('4', 'Cancel')], default='1', max_length=1)),
                ('is_activate', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_manager', to=settings.AUTH_USER_MODEL, verbose_name='ID Manager')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id_process', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID Process')),
                ('name_process', models.CharField(max_length=50, verbose_name='Name Process')),
                ('description_process', models.TextField(blank=True, null=True)),
                ('create_date_process', models.DateField(default=django.utils.timezone.now, verbose_name='Create Date Process')),
                ('start_date_process', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date Process')),
                ('end_date_process', models.DateField(default=django.utils.timezone.now, verbose_name='End Date Process')),
                ('status_process', models.CharField(choices=[('1', 'In Progress'), ('2', 'Completed'), ('3', 'Pending'), ('4', 'Cancel')], default='1', max_length=1)),
                ('is_activate', models.BooleanField(default=True)),
                ('rank_process', models.IntegerField(blank=True, null=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_manager_process', to=settings.AUTH_USER_MODEL, verbose_name='ID Manager')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_project_process', to='app.project', verbose_name='ID Project')),
                ('root_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_root_process', to='app.process', verbose_name='ID Root Process')),
            ],
        ),
        migrations.CreateModel(
            name='Discuss',
            fields=[
                ('id_discuss', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID Discuss')),
                ('content_discuss', models.TextField(blank=True, null=True)),
                ('create_date_discuss', models.DateField(default=django.utils.timezone.now, verbose_name='Create Date Discuss')),
                ('is_activate', models.BooleanField(default=True)),
                ('is_note', models.BooleanField(default=False)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_user_discuss', to=settings.AUTH_USER_MODEL, verbose_name='ID User')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_manager_discuss', to=settings.AUTH_USER_MODEL, verbose_name='ID Manager')),
                ('process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_process_discuss', to='app.process', verbose_name='ID Process')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_project_discuss', to='app.project', verbose_name='ID Project')),
            ],
        ),
        migrations.CreateModel(
            name='AssignProject',
            fields=[
                ('id_assign_project', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID Assign Project')),
                ('start_date_assign_project', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date Assign Project')),
                ('end_date_assign_project', models.DateField(default=django.utils.timezone.now, verbose_name='End Date Assign Project')),
                ('is_activate', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_manager_assign', to=settings.AUTH_USER_MODEL, verbose_name='ID Manager')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_project_assign', to='app.project', verbose_name='ID Project')),
                ('role_assign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_role_assign', to='app.role', verbose_name='ID Role')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_user_assign', to=settings.AUTH_USER_MODEL, verbose_name='ID User')),
            ],
        ),
    ]
